agspec <- COINobj$Input$IndMeta[COINobj$Input$IndMeta$IndCode %in% ind_names,] %>%
dplyr::select(starts_with("Agg"))
View(agspec)
load_all()
coin_plotcorr(ASEM, inames = "Sust")
load_all()
coin_plotcorr(ASEM, inames = "Sust")
load_all()
load_all()
coin_plotcorr(ASEM, inames = "Sust")
coin_plotcorr(ASEM, inames = "Conn")
use_package("corrplot")
library(devtools)
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
coin_plotframework(ASEM)
agg_cols <- cbind(Code=metad$IndCode, agg_cols)
View(agg_cols)
load_all()
coin_plotframework(ASEM)
coin_plotframework(ASEM)
coin_plotframework(ASEM)
fwk
load_all()
coin_plotframework(ASEM)
document()
load_all()
library(devtools)
load_all()
view(ASEMIndData)
ASEMIndData
IndData<-ASEMIndData
View(IndData)
View(ASEMIndData)
View(ASEMIndMeta)
View(ASEMAggMeta)
ASEM <- coin_assemble(data_raw = ASEMIndData, metad = ASEMIndMeta, framewk = ASEMAggMeta)
View(ASEM)
ASEM <- coin_denominate(ASEM)
View(ASEM)
View(ASEM[["Data"]][["Denominated"]])
ASEM <- coin_impute(ASEM, imtype = "indgroup_mean", dset = "Denominated", groupvar = "Group_EurAsia")
View(ASEM)
ASEM <- coin_treat(ASEM, dset = "Imputed")
ASEM$Data$Imputed
dplyr::ungroup(ASEM$Data$Imputed)
tt <- dplyr::ungroup(ASEM$Data$Imputed)
class(tt)
ungroup(tt)
dplyr::ungroup(tt)
load_all
load_all()
ASEM <- coin_impute(ASEM, imtype = "indgroup_mean", dset = "Denominated", groupvar = "Group_EurAsia")
document()
load_all()
document()
ASEM <- coin_impute(ASEM, imtype = "indgroup_mean", dset = "Denominated", groupvar = "Group_EurAsia")
ASEM <- coin_treat(ASEM, dset = "Imputed")
View(ASEM)
View(ASEM[["Analysis"]][["Treatment"]][["Summary"]])
coin_indicatordash(ASEM)
ASEM <- coin_normalise(ASEM, ntype = "minmax", npara = c(1,10), dset = "Treated")
View(ASEM)
View(ASEM[["Data"]][["Normalised"]])
coin_indicatordash(ASEM)
coin_plotframework(ASEM)
load_all()
coin_plotframework(ASEM)
coin_indplot(ASEM, dset = "Raw", inames = "LPI")
coin_indplot(ASEM, dset = "Treated", inames = "LPI")
coin_indplot(ASEM, dset = "Treated", inames = c("LPI","Goods"))
coin_indplot(ASEM, dset = "Treated", inames = "Political")
coin_indplot(ASEM, dset = "Treated", inames = "Sust")
coin_indplot(ASEM, dset = "Treated", inames = "Physical", type = "Violindot")
ASEM <- coin_preanalyse(ASEM, dset = "Raw")
ASEM <- coin_preanalyse(ASEM, dset = "Denominated")
View(ASEM)
ASEM <- coin_datacheck(ASEM)
load_all()
View(ASEMIndData)
View(ASEMIndMeta)
ASEM <- coin_assemble(data_raw = ASEMIndData, framewk = ASEMIndMeta, metad = ASEMAggMeta)
load_all()
ASEM <- coin_assemble(data_raw = ASEMIndData, metad = ASEMIndMeta, framewk = ASEMAggMeta)
View(ASEM)
View(ASEM[["Input"]][["IndData"]])
View(ASEM[["Input"]][["Denominators"]])
View(ASEM[["Data"]][["Raw"]])
coin_plotframework(ASEM)
ASEM <- coin_preanalyse(ASEM)
View(ASEM)
View(ASEM[["Analysis"]][["Raw"]][["StatTable"]])
View(ASEM[["Analysis"]][["Raw"]][["Outliers"]])
ASEM[["Analysis"]][["Raw"]][["Correlations"]]
ASEM[["Analysis"]][["Raw"]][["DenomCorrelations"]]
ASEM <- coin_denominate(ASEM)
View(ASEM)
View(ASEM[["Input"]][["IndMeta"]])
ASEM <- coin_preanalyse(ASEM, dset = "Denominated")
View(ASEM)
ASEM <- coin_impute(ASEM)
ASEM <- coin_impute(ASEM, dset = "Denominated")
ASEM <- coin_impute(ASEM, dset = "Denominated", imtype = "indgroup_mean", groupvar = "Group_EurAsia")
View(ASEM)
ASEM <- coin_treat(ASEM)
ASEM <- coin_treat(ASEM, dset = "Imputed")
coin_indicatordash(ASEM)
coin_indplot(ASEM, dset = "Raw", inames = "Flights")
coin_indplot(ASEM, dset = "Raw", inames = "Flights", type = "Violin")
coin_indplot(ASEM, dset = "Raw", inames = "Flights", type = "Violindot")
coin_indplot(ASEM, dset = "Raw", inames = "Physical", type = "Violindot")
coin_plotcorr(ASEM)
coin_plotcorr(ASEM, inames = "Physical")
ASEM <- coin_normalise(ASEM)
ASEM <- coin_normalise(ASEM, dset = "Treated")
ASEM <- coin_aggregate(ASEM, dset = "Normalised")
View(ASEM)
coin_rew8r(ASEM)
View(ASEM)
View(ASEM)
ASEM <- coin_rew8r(ASEM)
View(ASEM)
coin_2excel(ASEM)
coin_2excel(ASEM, fname = "test.xlsx")
?coin_assemble
?coin_normalise
devtools::install_github("bluefoxr/COINr")
devtools::install_github("bluefoxr/COINr")
devtools::install_github("bluefoxr/COINr")
install.packages("vctrs")
devtools::install_github("bluefoxr/COINr")
devtools::install_github("bluefoxr/COINr")
library(COINr)
detach("package:COINr", unload = TRUE)
library(devtools)
load_all()
ASEM <- coin_assemble(data_raw = ASEMIndData, metad = ASEMIndMeta, framewk = ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM, dset = "Denominated")
ASEM <- coin_aggregate(ASEM, dset = "Normalised")
load_all()
load_all()
document()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
idata1()
out$UnitCodes
library(readr)
ASEM_IndData <- read_csv("C:/Users/becke/OneDrive/Work/Consultancy/COINr/ASEM_IndData.csv")
View(ASEM_IndData)
?use_data
ASEMIndData <- ASEM_IndData
use_data(ASEMIndData, overwrite = T)
load_all
load_all()
ASEMIndData
ASEM <- coin_assemble(data_raw = ASEMIndData, metad = ASEMIndMeta, framewk = ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM, dset = "Denominated")
ASEM <- coin_aggregate(ASEM, dset = "Normalised")
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
library(devtools)
load_all()
ASEM <- coin_assemble(data_raw = ASEMIndData, metad = ASEMIndMeta, framewk = ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM, dset = "Denominated")
ASEM <- coin_aggregate(ASEM, dset = "Normalised")
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
f1 <- iplot_map(ASEM, "Aggregated", "Index")
load_all()
f1 <- iplot_map(ASEM, "Aggregated", "Index")
f1
load_all()
coin_resultsdash(ASEM)
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
iplot_map(ASEM, "Aggregated", "Index")
load_all()
coin_resultsdash(ASEM)
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
View(ASEM)
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
iplot_table(ASEM)
load_all()
iplot_table(ASEM)
load_all()
iplot_table(ASEM)
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs)
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
d1 <- ASEM$Data$Aggregated
d1a <- cbind(d1$UnitName, rev(d1[-UnitName]))
View(d1)
d1[UnitName]
d1["UnitName"]
d1a <- cbind(d1$UnitName, rev(d1[-"UnitName"]))
d1a <- cbind(d1$UnitName, rev( subset(d1, select=-c(UnitNames)) ))
d1a <- cbind(d1$UnitName, rev( subset(d1, select=-c("UnitNames")) ))
d1a <- cbind(d1$UnitName, rev( subset(d1, select=-UnitNames) ))
class(d1)
d1a <- cbind(d1$UnitName, rev( d1[setdiff(names(d1), "UnitNames"] ))
d1a <- cbind(d1$UnitName, rev( d1[setdiff(names(d1), "UnitNames")] ))
View(d1a)
d1a <- cbind(d1$UnitName, rev( d1[setdiff(names(d1), "UnitName")] ))
d1a <- c(d1$UnitName, rev( d1[setdiff(names(d1), "UnitName")] ))
d1a <- cbind(d1$UnitName, rev( d1[setdiff(names(d1), "UnitName")] ))
?cbind
d1a <- cbind(UnitName = d1$UnitName, rev( d1[setdiff(names(d1), "UnitName")] ))
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs)
View(coldefs)
list(colnames(d1))
as.list(colnames(d1))
tt <- as.list(colnames(d1))
tt[1]
is.numeric(d1)
out1 <- coin_aux_objcheck(COINobj, dset = "Aggregated")
out1 <- coin_aux_objcheck(ASEM, dset = "Aggregated")
cnames <- colnames(out1$ind_data_only)
cnames
cnames <- as.list(colnames(out1$ind_data_only))
length(cnames)
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
coldefs2 <- as.list(colnames(out1$ind_data_only))
for (ii in 1:length(coldefs2)){
coldefs2[[ii]] = reactable::colDef(
style = function(value) {
normalized <- (value - min(out1$ind_data_only[ii])) / (max(out1$ind_data_only[ii]) - min(out1$ind_data_only[ii]))
color <- orange_pal(normalized)
list(background = color)
}
)
}
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs)
View(coldefs2)
coldefs2[1]
class(coldefs2[1])
coldefs[1]
class(coldefs[1])
View(coldefs2)
View(coldefs)
View(coldefs2)
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
View(coldefs2)
warnings()
empty_list <- vector(mode = "list", length = 5)
empty_list
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
View(coldefs)
coldefs2 <- vector(mode = "list", length = ncol(out1$ind_data_only))
for (ii in 1:length(coldefs2)){
coldefs2[out1$ind_names[ii]] = NULL
coldefs2[out1$ind_names[ii]]$style = reactable::colDef(
style = function(value) {
normalized <- (value - min(out1$ind_data_only[ii])) / (max(out1$ind_data_only[ii]) - min(out1$ind_data_only[ii]))
color <- orange_pal(normalized)
list(background = color)
}
)
}
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
coldefs2[out1$ind_names[ii]] = 1
View(coldefs2)
coldefs2[out1$ind_names[ii]]$style = reactable::colDef(
style = function(value) {
normalized <- (value - min(out1$ind_data_only[ii])) / (max(out1$ind_data_only[ii]) - min(out1$ind_data_only[ii]))
color <- orange_pal(normalized)
list(background = color)
}
)
View(coldefs2)
coldefs2[out1$ind_names[ii]] = list( style = reactable::colDef(
style = function(value) {
normalized <- (value - min(out1$ind_data_only[ii])) / (max(out1$ind_data_only[ii]) - min(out1$ind_data_only[ii]))
color <- orange_pal(normalized)
list(background = color)
}
))
View(coldefs2)
coldefs2 <- vector(mode = "list", length = ncol(out1$ind_data_only))
for (ii in 1:length(coldefs2)){
#coldefs2[out1$ind_names[ii]] = 1
#browser()
coldefs2[out1$ind_names[ii]] = list( style = reactable::colDef(
style = function(value) {
normalized <- (value - min(out1$ind_data_only[ii])) / (max(out1$ind_data_only[ii]) - min(out1$ind_data_only[ii]))
color <- orange_pal(normalized)
list(background = color)
}
))
}
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
test=list(1)
test
test=list(1,2)
test
test[-1]
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
iplot_table(ASEM, dset = "Aggregated")
iplot_table(ASEM, dset = "Aggregated")
orange_pal(0.1)
orange_pal(0.2)
orange_pal(0.6)
?rgb
rgb(colorRamp(c("#ffe4cc", "#ffb54d"))(0), maxColorValue = 255)
rgb(0, 0:12, 0, max = 255)
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
load_all()
iplot_table(ASEM, dset = "Aggregated")
View(coldefs2)
load_all()
iplot_table(ASEM, dset = "Aggregated")
load_all()
coin_resultsdash(ASEM)
View(out1)
View(out1)
out1$ind_data[out1$ind_data$UnitCode=="Index",]
class(out1$ind_data[out1$ind_data$UnitCode=="Index",])
as.character(out1$ind_data[out1$ind_data$UnitCode=="Index",])
out1$ind_data_only[out1$UnitCodes =="AUS",]
out1 <- coin_aux_objcheck(COINobj, dset = "Aggregated", inames = "Conn")
out1 <- coin_aux_objcheck(ASEM, dset = "Aggregated", inames = "Conn")
out1$ind_data_only[out1$UnitCodes =="AUS",]
out1$ind_data_only[out1$UnitCodes =="AUS",c(1:6)]
as.numeric*out1$ind_data_only[out1$UnitCodes =="AUS",c(1:6)])
as.numeric(out1$ind_data_only[out1$UnitCodes =="AUS",c(1:6)])
load_all()
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "AUS")
iplot_radar(ASEM, dset = "Aggregated", usel = "AUS")
iplot_radar(ASEM, dset = "Aggregated", usel = "AUS")
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "AUS")
View(uRow)
fig
View(uRow)
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "CHN")
View(ASEM)
iplot_radar(ASEM, dset = "Aggregated", usel = "AUT")
iplot_radar(ASEM, dset = "Aggregated", usel = "BEL")
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR")
ASEM$Parameters$AggCodes[[1]]
load_all()
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR", levsel = 2)
View(ASEM)
View(ASEM[["Data"]][["Raw"]])
inames <- NULL
length(inames)
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR", levsel = 2)
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR", levsel = 2)
View(ind_data)
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR", levsel = 2)
inames
View(out)
load_all()
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR", levsel = 2)
View(uRow)
uRow <- out1$ind_data_only[out1$UnitCodes == usel,]
View(uRow)
load_all()
iplot_radar(ASEM, dset = "Aggregated", usel = "BGR", levsel = 2)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
coin_resultsdash(ASEM)
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
View(out1)
iplot_bar(ASEM,dset = "Raw", isel="LPI")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
ind_data_only = select(ind_data,all_of(ind_names),)
View(out1)
View(out1)
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
View(df1)
iplot_bar(ASEM,dset = "Raw", isel="LPI")
df1$Indicator
View(df1)
df1 <- data.frame(UnitCode = out1$ind_data$UnitCode,
"Indicator" = out1$ind_data[isel])
View(df1)
View(df1)
df1 <- df1[order(df1[2]),]
View(df1)
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="LPI")
View(COINobj)
View(df1)
iplot_bar(ASEM,dset = "Raw", isel="LPI")
iplot_bar(ASEM,dset = "Raw", isel="Elec")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="Elec")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="Elec")
?order
load_all()
iplot_bar(ASEM,dset = "Raw", isel="Elec")
load_all()
iplot_bar(ASEM,dset = "Raw", isel="Elec")
load_all()
coin_resultsdash(ASEM)
install_github("bluefoxr/GII", auth_token = "5843e616ff254eeda77ce0464a4001bcf3a54d19", build_vignettes = T)
devtools::install_github("bluefoxr/GII", auth_token = "5843e616ff254eeda77ce0464a4001bcf3a54d19", build_vignettes = T)
vignette("GII")
library(GII)
vignette("GII")
