View(IndData)
library(readxl)
IndMeta <- read_excel("C:/Users/becke/OneDrive/Work/Consultancy/COINr/ASEM_input_sheets.xlsx",
sheet = "IndMeta")
View(IndMeta)
library(readxl)
AggMeta <- read_excel("C:/Users/becke/OneDrive/Work/Consultancy/COINr/ASEM_input_sheets.xlsx",
sheet = "AggMeta")
View(AggMeta)
usethis::use_data(AggMeta,ASEMAggMeta)
library(usethis)
?use_data
use_data(AggMeta,IndData,IndMeta)
use_data(AggMeta,IndData,IndMeta, overwrite = T)
use_r("data.R")
class(IndData)
document()
library(devtools)
document()
load_all()
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
source('C:/Users/becke/OneDrive/Work/Consultancy/COINr/COINr2020/R/coin_assemble.R')
load_all()
rm(list = c("coin_assemble"))
coin_assemble(IndData,IndMeta,AggMeta)
force(data_raw)
View(IndData)
colnames(IndData[UnitNAme]) <- "UnitName"
IndData[UnitNAme]
colnames(IndData)[colnames(IndData) == 'UnitNAme'] <- 'UnitName'
use_data(IndData)
use_data(IndData, overwrite = T)
load_all()
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
coin_assemble(IndData,IndMeta,AggMeta)
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
coin_assemble(IndData,IndMeta,AggMeta)
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
View(agg_cols)
agg_names2 <- unique(agg_cols[[agg_no]])
View(framewk)
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
View(COINobj)
dplyr::select(framewk,dplyr::ends_with("Code")) %>%
as.list() %>% lapply(function(x) x[!is.na(x)])
View(data_raw)
library(readxl)
IndData <- read_excel("C:/Users/becke/OneDrive/Work/Consultancy/COINr/ASEM_input_sheets.xlsx",
sheet = "IndData", na = "\"NA\"")
View(IndData)
library(readr)
ASEMIndData <- read_csv("ASEM_IndData.csv")
is.na(ASEMIndData$ForPort)
is.na(AggMeta)
view(AggMeta)
AAggMeta
AggMeta
ASEMIndMeta <- read_csv("ASEM_IndMeta.csv")
ASEMAggMeta <- read_csv("ASEM_AggMeta.csv")
is.na(ASEMAggMeta)
ASEMAggMeta <- read_csv("ASEM_AggMeta.csv")
is.na(ASEMAggMeta)
use_data(ASEMAggMeta,ASEMIndData, ASEMIndMeta)
?use_data
document()
load_all()
coin_assemble(IndData,IndMeta,AggMeta)
coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
View(ASEM)
IndData
ASEMIndData
ASEMIndMeta <- read_csv("ASEM_IndMeta.csv")
use_data(ASEMIndMeta, overwrite = T)
document()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
View(ASEM)
load_all()
ASEM <- coin_denominate(ASEM)
load_all()
ASEM <- coin_denominate(ASEM)
document()
ASEM$Input$IndData$Flights/ASEM$Input$Denominators$Den_Pop
View(ASEM)
View(ASEM)
View(ASEM[["Data"]][["Denominated"]])
use_r("coin_auxilliary.R")
use_r("coin_auxillary.R")
document()
load_all()
coin_aux_objcheck(ASEM)
coin_aux_objcheck(ASEM, inames = "Connectivity")
coin_aux_objcheck(ASEM, inames = "Conn")
coin_aux_objcheck(ASEM, inames = "Conn")
load_all()
coin_aux_objcheck(ASEM, inames = "Conn")
any(COINobj$Parameters$AggCodes == inames)
COINobj$Parameters$AggCodes == inames
lapply(COINobj$Parameters$AggCodes, function(x) any(x == inames))
any(lapply(COINobj$Parameters$AggCodes, function(x) any(x == inames)))
as.logical(lapply(COINobj$Parameters$AggCodes, function(x) any(x == inames)))
load_all()
coin_aux_objcheck(ASEM, inames = "Conn")
load_all()
coin_aux_objcheck(ASEM, inames = "Conn")
View(ASEM)
coin_aux_objcheck(ASEM, inames = "Political")
coin_aux_objcheck(ASEM, inames = "Conn")
grepl(inames, COINobj$Input$IndMeta
)
View(ASEM[["Input"]][["IndMeta"]])
colnames(COINobj$Input$IndMeta)
COINobj$Input$IndMeta %>% select(starts_with("Agg")) %>%
colnames()
COINobj$Input$IndMeta %>% select(starts_with("Agg")) %>%
colnames() %>% pull(grepl(inames, COINobj$Input$IndMeta))
COINobj$Input$IndMeta %>% select(starts_with("Agg")) %>%
colnames() %>% select(grepl(inames, COINobj$Input$IndMeta))
aggcol <- COINobj$Input$IndMeta %>% select(starts_with("Agg")) %>%
colnames() %>% magrittr::extract(grepl(inames, COINobj$Input$IndMeta))
aggcol <- COINobj$Input$IndMeta %>% select(starts_with("Agg")) %>%
colnames() %>% magrittr::extract(grepl(inames, COINobj$Input$IndMeta %>% select(starts_with("Agg"))))
ind_names <- COINobj$Input$IndMeta %>%
filter(!!as.symbol(aggcol) == inames) %>%
pull(IndCode)
load_all()
coin_aux_objcheck(ASEM, inames = "Conn")
coin_aux_objcheck(ASEM, inames = "Index")
coin_aux_objcheck(ASEM, inames = "P2P")
load_all()
coin_aux_objcheck(ASEM, inames = "P2P")
document()
?coin_aux_objcheck
?coin_aux_objcheck
document()
?coin_aux_objcheck
?coin_denominate
document()
load_all()
ASEM <- coin_normalise(ASEM)
load_all()
ASEM <- coin_normalise(ASEM)
View(out)
load_all()
ASEM <- coin_normalise(ASEM)
ASEM <- coin_normalise(ASEM)
load_all()
ASEM <- coin_normalise(ASEM)
load_all()
ASEM <- coin_normalise(ASEM)
load_all()
ASEM <- coin_normalise(ASEM)
View(ASEM)
View(ASEM)
View(ASEM[["Data"]][["Normalised"]])
View(ASEM, dset = "denominated")
ASEM <- coin_normalise(ASEM, dset = "denominated")
View(ASEM)
View(ASEM[["Data"]][["Normalised"]])
load_all()
ASEM <- coin_normalise(ASEM, dset = "denominated")
View(ASEM)
ASEM[["Method"]][["Normalisation"]][["directions"]]
load_all()
coin_denominate(3)
load_all()
ASEM <- coin_impute(ASEM)
use_package("tidyr")
load_all()
ASEM <- coin_impute(ASEM)
load_all()
ASEM <- coin_impute(ASEM)
load_all()
ASEM <- coin_impute(ASEM)
load_all()
ASEM <- coin_impute(ASEM)
ASEM <- coin_impute(ASEM, imtype = "ind_median")
load_all()
ASEM <- coin_impute(ASEM, imtype = "ind_median")
load_all()
document()
load_all()
ASEM <- coin_impute(ASEM, imtype = "ind_median")
View(ASEM)
exists("Weights",ASEM$Parameters)
load_all()
ASEM <- coin_aggregate(ASEM, dset = "normalised")
load_all()
ASEM <- coin_aggregate(ASEM, dset = "normalised")
load_all()
ASEM <- coin_aggregate(ASEM, dset = "normalised")
load_all()
ASEM <- coin_aggregate(ASEM, dset = "normalised")
View(ASEM)
View(ASEM[["Data"]][["Aggregated"]])
document()
ASEM$Input$IndData %>% pull(IndCode)
ASEM$Input$IndData %>% dplyr::pull(IndCode)
ASEM$Input$IndData
ASEM$Input$IndData %>% dplyr::pull("IndCode")
ASEM$Input$IndData %>% dplyr::pull(UnitCode)
ASEM$Input$IndData %>% dplyr::pull("UnitCode")
use_package("stringr")
document()
document()
library(COINr2020)
usethis::use_vignette("Introduction")
document()
library(devtools)
document()
library(COINr2020)
vignette(COINr2020)
browseVignettes("COINr2020")
library(devtools)
use_r("coin_2excel.R")
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM)
coin_2excel(COINobj)
load_all()
coin_2excel(COINobj)
load_all()
coin_2excel(COINobj)
document()
load_all()
coin_2excel(COINobj)
load_all()
coin_2excel(COINobj)
coin_2excel(ASEM)
?xlsx
?write.xlsx
View(ASEM)
load_all()
coin_2excel(ASEM)
document()
document()
library(devtools)
document()
libPaths()
.libPaths()
devtools::build()
devtools::build_vignettes()
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM)
length(ASEM$Data)
names(ASEM$Data)
names(ASEM$Data)[1]
"blue"
blue
document()
load_all()
coin_2excel(ASEM)
load_all()
coin_2excel(ASEM)
document()
load_all()
coin_2excel(ASEM)
View(ASEM)
View(ASEM[["Data"]][["Raw"]])
load_all()
coin_2excel(ASEM)
View(ASEM[["Data"]][["Raw"]])
ASEMIndData
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
View(data_raw)
ASEMIndData <- ASEMIndData
View(ASEMIndData)
colnames(ASEMIndData)[1] <- "UnitName"
use_data(ASEMIndData, overwrite = T)
document()
load_all()
ASEMIndData
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM)
load_all()
coin_2excel(ASEM)
coin_2excel(ASEM)
load_all()
coin_2excel(ASEM)
load_all()
coin_2excel(ASEM)
wb <- openxlsx::createWorkbook()
shname <- "Parameters"
openxlsx::addWorksheet(wb, sheetName = shname, tabColour = "pink")
openxlsx::writeData(wb, shname, COINobj$Parameters[[1]], colNames = TRUE, startRow = 1)
openxlsx::writeData(wb, shname, ASEM$Parameters[[1]], colNames = TRUE, startRow = 1)
openxlsx::saveWorkbook(wb, fname, overwrite = TRUE)
openxlsx::saveWorkbook(wb, "test.xlsx", overwrite = TRUE)
openxlsx::writeData(wb, shname, ASEM$Parameters[[2]], colNames = TRUE, startRow = 2)
openxlsx::saveWorkbook(wb, "test.xlsx", overwrite = TRUE)
name(ASEM$Parameters[1])
names(ASEM$Parameters[1])
names(ASEM$Parameters[[1]])
load_all()
coin_2excel(ASEM)
document()
devtools::build_vignettes()
load_all()
library(COINr2020)
vignette()
library(devtools)
document()
load_all()
build()
?build
library(devtools)
install_github("bluefoxr/COINr")
library(devtools)
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
ASEM <- coin_denominate(ASEM)
ASEM <- coin_normalise(ASEM)
coin_indicatordash(ASEM)
load_all()
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
input$dset1
class(input$dset1)
paste0(
"coin_aux_objcheck(COINobj, ",input$dset1,")$ind_names")
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
input$dset1
coin_aux_objcheck(COINobj, input$dset1, inames)
idata1(coin_aux_objcheck(COINobj, input$dset1, inames)$ind_data_only)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
ASEM <- coin_aggregate(ASEM)
load_all()
ASEM <- coin_aggregate(ASEM)
load_all()
ASEM <- coin_aggregate(ASEM)
View(ASEM)
View(ASEM[["Data"]][["Aggregated"]])
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
load_all()
coin_indicatordash(ASEM)
document()
View(ASEM)
document()
library(devtools)
document()
document()
load_all()
ASEM <- coin_assemble(ASEMIndData,ASEMIndMeta,ASEMAggMeta)
ASEM <- coin_datacheck(ASEM)
ASEM <- coin_datacheck(ASEM)
load_all()
ASEM <- coin_datacheck(ASEM)
View(data_avail)
load_all()
ASEM <- coin_datacheck(ASEM)
View(data_avail)
View(data_avail_bygroup)
load_all()
load_all()
ASEM <- coin_datacheck(ASEM)
load_all()
ASEM <- coin_datacheck(ASEM)
View(ASEM)
View(ASEM)
View(ASEM[["Analysis"]][["DataAvail"]][["Summary"]])
View(ASEM[["Analysis"]][["DataAvail"]][["ByGroup"]])
ASEM <- coin_datacheck(ASEM)
View(ind_data_only)
ASEM <- coin_preanalyse(ASEM)
View(ASEM)
View(ASEM[["Analysis"]][["Raw"]][["StatTable"]])
load_all()
ASEM <- coin_datacheck(ASEM)
load_all()
ASEM <- coin_datacheck(ASEM, unit_screen = TRUE)
ASEM <- coin_datacheck(ASEM, ind_thresh = 0.95, unit_screen = TRUE)
View(ASEM)
View(ASEM)
document
document()
load_all()
load_all()
ASEM <- coin_datacheck(ASEM, unit_screen = TRUE)
load_all()
ASEM <- coin_datacheck(ASEM, unit_screen = TRUE)
load_all()
ASEM <- coin_datacheck(ASEM, unit_screen = TRUE)
load_all()
document()
load_all()
load_all()
ASEM <- coin_datacheck(ASEM, unit_screen = TRUE)
View(data_avail)
data_avail <- cbind(data_avail, Included = data_avail$LowDataAll == FALSE)
View(data_avail)
document()
load_all()
load_all()
ASEM <- coin_aggregate(ASEM)
View(ASEM)
ASEM <- coin_normalised(ASEM)
ASEM <- coin_normalise(ASEM)
ASEM <- coin_aggregate(ASEM)
coin_rew8r(ASEM)
load_all()
coin_rew8r(ASEM)
c
c
Q
load_all()
coin_rew8r(ASEM)
dfc
dfc[dfc$Correlation < input$locorval]
load_all()
coin_rew8r(ASEM)
document()
load_all()
