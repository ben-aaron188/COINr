% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coin_treat.R
\name{coin_win}
\alias{coin_win}
\title{Winsorisation helper function}
\usage{
coin_win(
  icol,
  winmax,
  winchange = TRUE,
  t_skew = 2,
  t_kurt = 3.5,
  icode = NULL
)
}
\arguments{
\item{icol}{The vector of data to Winsorize}

\item{winmax}{The maximum number of points to Winsorise for each indicator. If NA, will keep Winsorising until skew&kurt thresholds achieved (but it is likely this will cause errors)}

\item{winchange}{Logical: if TRUE, Winsorisation can change direction from one iteration to the next. Otherwise if FALSE (default), no change.}

\item{t_skew}{Absolute skew threshold (default 2)}

\item{t_kurt}{Kurtosis threshold (default 3.5)}

\item{icode}{The indicator name - used for error messages.}
}
\description{
To be used inside treat() to avoid repetitions. Winsorises one column of data.
}
\details{
Outliers are identified according to skewness and kurtosis thresholds. The algorithm attempts to reduce the absolute skew and
kurtosis by successively Winsorising points up to a specified limit.

The process is detailed in the \href{https://bluefoxr.github.io/COINrDoc/data-treatment.html#data-treatment-in-coinr}{COINr online documentation}.
}
\examples{
\dontrun{
# get a column of data with outliers
x <- ASEMIndData$Tariff
# Winsorise up to five points
winlist <- coin_win(x, winmax = 5)
}

}
\seealso{
\itemize{
\item \code{\link[=treat]{treat()}} Outlier treatment
}
}
