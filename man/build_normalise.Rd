% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalise.R
\name{build_normalise}
\alias{build_normalise}
\title{Normalise indicator data sets}
\usage{
build_normalise(
  GII,
  default_ntype = "minmax",
  default_npara = NULL,
  indiv_spec = NULL
)
}
\arguments{
\item{GII}{The GII object}

\item{default_ntype}{The default type of normalisation method. See details.}

\item{default_npara}{Supporting object for \code{ntype}. See details.}

\item{indiv_spec}{A data frame specifying individual normalisation to apply to specific indicators. Should have cols as follows:
\itemize{
\item \code{CODE} is the code of the indicator to normalise
\item \code{ntype} is the type of normalisation to apply
\item \code{npara} is a corresponding object or parameters that are used by \code{ntype}
Note, \code{npara} implies involves creating a "list column" in the data frame. See example for how to do this.
}}
}
\value{
An updated GII with normalised data set added
}
\description{
Given a GII object with indicator data set, returns an updated GII with a normalised data set.
}
\details{
Normalisation is specified using the \code{default_ntype} and \code{default_npara} arguments, as well as the
\code{indiv_spec} argument. In these, "ntype" should be a character string which is the name of a normalisation
function. For example, \code{default_ntype = "minmax"} calls the \code{\link[=minmax]{minmax()}} function. \code{npara} is any
further argument to \code{ntype}. This means that any function can be passed to \code{\link[=build_normalise]{build_normalise()}}, as long as it
is of the form \code{f(x, npara)}, where \code{x} is a vector (i.e. one column of data) and should return a
similar vector of normalised data. See \code{\link[=minmax]{minmax()}} for an example. If a function has more than one
additional argument, then \code{npara} can be passed as a list and a wrapper could be created.
}
\examples{
# build example up to data treatment
GII2020 <- example_GII2020(up_to = "build_treat")
# assemble df for specification of "special cases", i.e. the scaled indicators
nspecs_indiv <- data.frame(
  CODE = ScalePara_2020$IndCode,
  ntype = "scaled"
)
# add the parameters separately. This is a "list column"
nspecs_indiv$npara <- ScalePara_2020[c("l","u")] |>
  t() |>
  as.data.frame() |>
  as.list()
# now run the normalise function
GII2020 <- build_normalise(GII2020, default_ntype = "minmax", default_npara = c(0,100),
                        indiv_spec = nspecs_indiv)

}
